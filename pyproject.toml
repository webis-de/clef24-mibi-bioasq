[project]
name = "mibi-bioasq"
authors = [
    {name = "Jan Heinrich Reimer", email = "heinrich.reimer@uni-jena.de"},
    {name = "Alexander Bondarenko", email = "alexander.bondarenko@uni-jena.de"},
    {name = "Adrian Viehweger", email = "adrian.viehweger@medizin.uni-leipzig.de"},
    {name = "Matthias Hagen", email = "matthias.hagen@uni-jena.de"},
]
description = "MiBi at BioASQ 2024"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "annotated-types~=0.6.0",
    "beautifulsoup4~=4.12",
    "click~=8.1",
    "dspy-ai~=2.3",
    "elasticsearch7~=7.17",
    "elasticsearch7-dsl~=7.3",
    "importlib-metadata~=7.0",
    "instructor~=0.6.2",
    "joblib~=1.3",
    "jupyter~=1.0",
    "llama-index-postprocessor-rankgpt-rerank~=0.1.3",
    "loguru~=0.7.2",
    "lxml~=5.1",
    "nltk~=3.8",
    "openai~=1.3",
    "pandas~=2.0",
    "pubmed-parser~=0.3.1",
    "pyrate-limiter~=3.2",
    "python-dotenv~=1.0",
    "python-terrier~=0.10.0",
    "requests~=2.31",
    "tqdm~=4.64",
    "torch~=2.0",
    "transformers~=4.31",
    "unpywall~=0.2.3",
]
dynamic = ["version"]

[project.optional-dependencies]
tests = [
    "bandit[toml]~=1.7",
    "lxml-stubs~=0.5.1",
    "mypy~=1.5",
    "pandas-stubs~=2.0",
    "pytest~=8.0",
    "pytest-cov~=4.0",
    "ruff~=0.3.0",
    "types-tqdm~=4.66",
]

[project.urls]
"Homepage" = "https://github.com/alebondarenko/mibi-bioasq"
"Bug Tracker" = "https://github.com/alebondarenko/mibi-bioasq/issues"

[project.scripts]
mibi = "mibi.cli:cli"

[build-system]
requires = [
    "setuptools~=69.0",
    "setuptools-scm~=8.0",    
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
exclude = [
    "build",
    "venv",
    "notebooks",
    "data",
]

[tool.setuptools_scm]

[tool.ruff]
exclude = [
    "build",
    "venv",
    "notebooks",
    "data",
    "scripts",  # FIXME: Include again, after fixing the issues.
]

[tool.mypy]
exclude = [
    "build",
    "venv",
    "notebooks",
    "data",
    "scripts",  # FIXME: Include again, after fixing the issues.
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = [
    "build",
    "venv",
    "notebooks",
    "data",
]

[tool.bandit.assert_used]
skips = ["**/test_*.py"]

[tool.pytest.ini_options]
log_cli = "True"
